
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALCOMPNOTEQUALGREATER_THAN_EQUALLESS_THAN_EQUALGREATER_THANLESS_THANleftADDSUBTRACTleftEXPMULTIPLYDIVIDEADD AND BREAK CHAR CHARTYPE COMMA COMMENT CONTINUE DIVIDE ELSE EQUAL EQUALCOMP EXP FLOAT FLOATTYPE FOR GREATER_THAN GREATER_THAN_EQUAL IDENTIFIER IF INPUT INT INTTYPE LBRACE LESS_THAN LESS_THAN_EQUAL LPAREN MULTIPLY NOT NOTEQUAL OR PRINT RBRACE RETURN RPAREN SEMICOLON STRING STRINGTYPE SUBTRACT VOID WHILE\n    ka : expression\n       | empty\n    \n    expression : expression ADD expression\n               | expression SUBTRACT expression\n               | expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression EXP expression\n    \n    expression : expression EQUALCOMP expression\n               | expression GREATER_THAN_EQUAL expression\n               | expression LESS_THAN_EQUAL expression\n               | expression GREATER_THAN expression\n               | expression LESS_THAN expression\n               | expression NOTEQUAL expression\n    \n    expression : NOT expression\n    \n    expression : expression AND expression\n               | expression OR expression\n    \n    expression : INT\n               | FLOAT\n    \n    expression : IF LPAREN expression RPAREN LBRACE expression RBRACE\n    \n    expression : IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE\n    \n    empty :\n    '
    
_lr_action_items = {'NOT':([0,4,8,9,10,11,12,13,14,15,16,17,18,19,20,22,38,42,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'INT':([0,4,8,9,10,11,12,13,14,15,16,17,18,19,20,22,38,42,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'FLOAT':([0,4,8,9,10,11,12,13,14,15,16,17,18,19,20,22,38,42,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'IF':([0,4,8,9,10,11,12,13,14,15,16,17,18,19,20,22,38,42,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'$end':([0,1,2,3,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,40,44,],[-21,0,-1,-2,-17,-18,-14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,-16,-19,-20,]),'ADD':([2,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,],[8,-17,-18,8,-3,-4,-5,-6,-7,8,8,8,8,8,8,8,8,8,8,-19,8,-20,]),'SUBTRACT':([2,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,],[9,-17,-18,9,-3,-4,-5,-6,-7,9,9,9,9,9,9,9,9,9,9,-19,9,-20,]),'MULTIPLY':([2,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,],[10,-17,-18,10,10,10,-5,-6,-7,10,10,10,10,10,10,10,10,10,10,-19,10,-20,]),'DIVIDE':([2,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,],[11,-17,-18,11,11,11,-5,-6,-7,11,11,11,11,11,11,11,11,11,11,-19,11,-20,]),'EXP':([2,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,],[12,-17,-18,12,12,12,-5,-6,-7,12,12,12,12,12,12,12,12,12,12,-19,12,-20,]),'EQUALCOMP':([2,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,],[13,-17,-18,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,13,13,13,13,-19,13,-20,]),'GREATER_THAN_EQUAL':([2,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,],[14,-17,-18,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,14,14,14,14,-19,14,-20,]),'LESS_THAN_EQUAL':([2,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,],[15,-17,-18,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,15,15,15,15,-19,15,-20,]),'GREATER_THAN':([2,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,],[16,-17,-18,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,16,16,16,16,-19,16,-20,]),'LESS_THAN':([2,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,],[17,-17,-18,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,17,17,17,17,-19,17,-20,]),'NOTEQUAL':([2,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,],[18,-17,-18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,18,18,18,18,-19,18,-20,]),'AND':([2,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,],[19,-17,-18,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,19,19,19,19,-19,19,-20,]),'OR':([2,5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,],[20,-17,-18,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,20,20,20,20,-19,20,-20,]),'RPAREN':([5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,40,44,],[-17,-18,-14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,-16,37,-19,-20,]),'RBRACE':([5,6,21,23,24,25,26,27,28,29,30,31,32,33,34,35,39,40,43,44,],[-17,-18,-14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,-16,40,-19,44,-20,]),'LPAREN':([7,],[22,]),'LBRACE':([37,41,],[38,42,]),'ELSE':([40,],[41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ka':([0,],[1,]),'expression':([0,4,8,9,10,11,12,13,14,15,16,17,18,19,20,22,38,42,],[2,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,43,]),'empty':([0,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ka","S'",1,None,None,None),
  ('ka -> expression','ka',1,'p_ka','ka.py',153),
  ('ka -> empty','ka',1,'p_ka','ka.py',154),
  ('expression -> expression ADD expression','expression',3,'p_expression_binary','ka.py',161),
  ('expression -> expression SUBTRACT expression','expression',3,'p_expression_binary','ka.py',162),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binary','ka.py',163),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','ka.py',164),
  ('expression -> expression EXP expression','expression',3,'p_expression_binary','ka.py',165),
  ('expression -> expression EQUALCOMP expression','expression',3,'p_expression_binary_compare','ka.py',183),
  ('expression -> expression GREATER_THAN_EQUAL expression','expression',3,'p_expression_binary_compare','ka.py',184),
  ('expression -> expression LESS_THAN_EQUAL expression','expression',3,'p_expression_binary_compare','ka.py',185),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression_binary_compare','ka.py',186),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_binary_compare','ka.py',187),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binary_compare','ka.py',188),
  ('expression -> NOT expression','expression',2,'p_expression_unary','ka.py',208),
  ('expression -> expression AND expression','expression',3,'p_expression_and_or','ka.py',216),
  ('expression -> expression OR expression','expression',3,'p_expression_and_or','ka.py',217),
  ('expression -> INT','expression',1,'p_int_float','ka.py',228),
  ('expression -> FLOAT','expression',1,'p_int_float','ka.py',229),
  ('expression -> IF LPAREN expression RPAREN LBRACE expression RBRACE','expression',7,'p_expression_if','ka.py',236),
  ('expression -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE','expression',11,'p_expression_if_else','ka.py',245),
  ('empty -> <empty>','empty',0,'p_empty','ka.py',257),
]
