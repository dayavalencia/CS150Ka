
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALCOMPNOTEQUALGREATER_THAN_EQUALLESS_THAN_EQUALGREATER_THANLESS_THANleftADDSUBTRACTleftEXPMULTIPLYDIVIDEADD AND BREAK CHAR CHARTYPE COMMA COMMENT CONTINUE DIVIDE ELSE EQUAL EQUALCOMP EXP FLOAT FLOATTYPE FOR GREATER_THAN GREATER_THAN_EQUAL IDENTIFIER IF INPUT INT INTTYPE LBRACE LESS_THAN LESS_THAN_EQUAL LPAREN MULTIPLY NOT NOTEQUAL OR PRINT RBRACE RETURN RPAREN SEMICOLON STRING STRINGTYPE SUBTRACT VOID WHILE\n    ka : expression ka\n       | assign ka\n       | if_statement ka\n       | if_else_statement ka\n       | while_statement ka\n       | for_statement ka\n       | function_statement ka\n       | print ka\n       | empty\n    \n    assign : INTTYPE IDENTIFIER EQUAL INT\n           | INTTYPE IDENTIFIER EQUAL expression\n           | FLOATTYPE IDENTIFIER EQUAL expression\n           | CHARTYPE IDENTIFIER EQUAL CHAR\n           | FLOATTYPE IDENTIFIER EQUAL FLOAT\n           | STRINGTYPE IDENTIFIER EQUAL STRING\n    \n  print : PRINT LPAREN expression RPAREN\n  \n    expression : expression ADD expression\n               | expression SUBTRACT expression\n               | expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression EXP expression\n    \n    expression : expression EQUALCOMP expression\n               | expression GREATER_THAN_EQUAL expression\n               | expression LESS_THAN_EQUAL expression\n               | expression GREATER_THAN expression\n               | expression LESS_THAN expression\n               | expression NOTEQUAL expression\n    \n    expression : NOT expression\n    \n    expression : expression AND expression\n               | expression OR expression\n    \n    expression : INT\n               | FLOAT\n    \n    if_statement : IF LPAREN expression RPAREN LBRACE expression RBRACE empty\n    \n    if_else_statement : IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE empty\n                      | IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE if_else_statement\n                      | IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE if_statement\n    \n    while_statement : WHILE LPAREN expression RPAREN LBRACE expression RBRACE\n    \n    for_statement : FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN LBRACE expression RBRACE\n    \n    type_identifier : INTTYPE IDENTIFIER\n                    | CHARTYPE IDENTIFIER\n                    | FLOATTYPE IDENTIFIER\n                    | STRINGTYPE IDENTIFIER\n    \n    function_statement : type_identifier LPAREN function_input RPAREN LBRACE expression RBRACE\n                       | VOID IDENTIFIER LPAREN function_input RPAREN LBRACE expression RBRACE\n    \n    function_input : type_identifier COMMA function_input\n                   | type_identifier\n    \n    expression : IDENTIFIER\n    \n    empty :\n    '
    
_lr_action_items = {'NOT':([0,2,3,4,5,6,7,8,9,11,12,13,14,26,27,28,29,30,31,32,33,34,35,36,37,38,46,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,89,90,91,92,93,94,97,109,110,111,114,120,121,122,124,126,129,131,132,133,134,135,139,140,142,143,145,],[11,11,11,11,11,11,11,11,11,11,-31,-32,-47,11,11,11,11,11,11,11,11,11,11,11,11,11,-28,11,11,11,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,11,11,-10,-11,-12,-14,-13,-15,11,-16,11,11,11,11,-48,-37,-43,-33,-44,11,-35,-36,11,11,-48,-38,-34,11,-48,]),'INT':([0,2,3,4,5,6,7,8,9,11,12,13,14,26,27,28,29,30,31,32,33,34,35,36,37,38,46,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,89,90,91,92,93,94,97,109,110,111,114,120,121,122,124,126,129,131,132,133,134,135,139,140,142,143,145,],[12,12,12,12,12,12,12,12,12,12,-31,-32,-47,12,12,12,12,12,12,12,12,12,12,12,12,12,-28,12,12,12,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,89,12,-10,-11,-12,-14,-13,-15,12,-16,12,12,12,12,-48,-37,-43,-33,-44,12,-35,-36,12,12,-48,-38,-34,12,-48,]),'FLOAT':([0,2,3,4,5,6,7,8,9,11,12,13,14,26,27,28,29,30,31,32,33,34,35,36,37,38,46,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,89,90,91,92,93,94,97,109,110,111,114,120,121,122,124,126,129,131,132,133,134,135,139,140,142,143,145,],[13,13,13,13,13,13,13,13,13,13,-31,-32,-47,13,13,13,13,13,13,13,13,13,13,13,13,13,-28,13,13,13,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,13,92,-10,-11,-12,-14,-13,-15,13,-16,13,13,13,13,-48,-37,-43,-33,-44,13,-35,-36,13,13,-48,-38,-34,13,-48,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,23,26,27,28,29,30,31,32,33,34,35,36,37,38,46,51,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,77,78,79,80,83,84,85,86,89,90,91,92,93,94,97,109,110,111,114,120,121,122,124,126,129,131,132,133,134,135,139,140,142,143,145,],[14,14,14,14,14,14,14,14,14,14,-31,-32,-47,47,48,49,50,55,14,14,14,14,14,14,14,14,14,14,14,14,14,-28,14,14,14,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,14,14,98,99,100,101,104,105,106,107,-10,-11,-12,-14,-13,-15,14,-16,14,14,14,14,-48,-37,-43,-33,-44,14,-35,-36,14,14,-48,-38,-34,14,-48,]),'INTTYPE':([0,2,3,4,5,6,7,8,9,12,13,14,46,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,87,89,90,91,92,93,94,102,109,118,121,122,124,126,129,132,133,139,140,142,145,],[15,15,15,15,15,15,15,15,15,-31,-32,-47,-28,77,83,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,83,-10,-11,-12,-14,-13,-15,83,-16,77,-48,-37,-43,-33,-44,-35,-36,-48,-38,-34,-48,]),'FLOATTYPE':([0,2,3,4,5,6,7,8,9,12,13,14,46,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,87,89,90,91,92,93,94,102,109,118,121,122,124,126,129,132,133,139,140,142,145,],[16,16,16,16,16,16,16,16,16,-31,-32,-47,-28,78,85,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,85,-10,-11,-12,-14,-13,-15,85,-16,78,-48,-37,-43,-33,-44,-35,-36,-48,-38,-34,-48,]),'CHARTYPE':([0,2,3,4,5,6,7,8,9,12,13,14,46,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,87,89,90,91,92,93,94,102,109,118,121,122,124,126,129,132,133,139,140,142,145,],[17,17,17,17,17,17,17,17,17,-31,-32,-47,-28,79,84,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,84,-10,-11,-12,-14,-13,-15,84,-16,79,-48,-37,-43,-33,-44,-35,-36,-48,-38,-34,-48,]),'STRINGTYPE':([0,2,3,4,5,6,7,8,9,12,13,14,46,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,87,89,90,91,92,93,94,102,109,118,121,122,124,126,129,132,133,139,140,142,145,],[18,18,18,18,18,18,18,18,18,-31,-32,-47,-28,80,86,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,86,-10,-11,-12,-14,-13,-15,86,-16,80,-48,-37,-43,-33,-44,-35,-36,-48,-38,-34,-48,]),'IF':([0,2,3,4,5,6,7,8,9,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,89,90,91,92,93,94,109,121,122,124,126,127,129,132,133,139,140,142,145,],[19,19,19,19,19,19,19,19,19,-31,-32,-47,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-10,-11,-12,-14,-13,-15,-16,-48,-37,-43,-33,130,-44,-35,-36,-48,-38,-34,-48,]),'WHILE':([0,2,3,4,5,6,7,8,9,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,89,90,91,92,93,94,109,121,122,124,126,129,132,133,139,140,142,145,],[20,20,20,20,20,20,20,20,20,-31,-32,-47,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-10,-11,-12,-14,-13,-15,-16,-48,-37,-43,-33,-44,-35,-36,-48,-38,-34,-48,]),'FOR':([0,2,3,4,5,6,7,8,9,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,89,90,91,92,93,94,109,121,122,124,126,129,132,133,139,140,142,145,],[21,21,21,21,21,21,21,21,21,-31,-32,-47,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-10,-11,-12,-14,-13,-15,-16,-48,-37,-43,-33,-44,-35,-36,-48,-38,-34,-48,]),'VOID':([0,2,3,4,5,6,7,8,9,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,89,90,91,92,93,94,109,121,122,124,126,129,132,133,139,140,142,145,],[23,23,23,23,23,23,23,23,23,-31,-32,-47,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-10,-11,-12,-14,-13,-15,-16,-48,-37,-43,-33,-44,-35,-36,-48,-38,-34,-48,]),'PRINT':([0,2,3,4,5,6,7,8,9,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,89,90,91,92,93,94,109,121,122,124,126,129,132,133,139,140,142,145,],[24,24,24,24,24,24,24,24,24,-31,-32,-47,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-10,-11,-12,-14,-13,-15,-16,-48,-37,-43,-33,-44,-35,-36,-48,-38,-34,-48,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,25,39,40,41,42,43,44,45,46,57,58,59,60,61,62,63,64,65,66,67,68,69,89,90,91,92,93,94,109,121,122,124,126,129,132,133,139,140,142,145,],[-48,0,-48,-48,-48,-48,-48,-48,-48,-48,-9,-31,-32,-47,-1,-2,-3,-4,-5,-6,-7,-8,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,-10,-11,-12,-14,-13,-15,-16,-48,-37,-43,-33,-44,-35,-36,-48,-38,-34,-48,]),'ADD':([2,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,89,90,91,92,112,116,117,119,125,136,137,138,144,],[26,-31,-32,-47,26,-17,-18,-19,-20,-21,26,26,26,26,26,26,26,26,26,26,26,-31,26,26,-32,26,26,26,26,26,26,26,26,26,]),'SUBTRACT':([2,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,89,90,91,92,112,116,117,119,125,136,137,138,144,],[27,-31,-32,-47,27,-17,-18,-19,-20,-21,27,27,27,27,27,27,27,27,27,27,27,-31,27,27,-32,27,27,27,27,27,27,27,27,27,]),'MULTIPLY':([2,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,89,90,91,92,112,116,117,119,125,136,137,138,144,],[28,-31,-32,-47,28,28,28,-19,-20,-21,28,28,28,28,28,28,28,28,28,28,28,-31,28,28,-32,28,28,28,28,28,28,28,28,28,]),'DIVIDE':([2,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,89,90,91,92,112,116,117,119,125,136,137,138,144,],[29,-31,-32,-47,29,29,29,-19,-20,-21,29,29,29,29,29,29,29,29,29,29,29,-31,29,29,-32,29,29,29,29,29,29,29,29,29,]),'EXP':([2,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,89,90,91,92,112,116,117,119,125,136,137,138,144,],[30,-31,-32,-47,30,30,30,-19,-20,-21,30,30,30,30,30,30,30,30,30,30,30,-31,30,30,-32,30,30,30,30,30,30,30,30,30,]),'EQUALCOMP':([2,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,89,90,91,92,112,116,117,119,125,136,137,138,144,],[31,-31,-32,-47,31,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,31,31,31,31,31,-31,31,31,-32,31,31,31,31,31,31,31,31,31,]),'GREATER_THAN_EQUAL':([2,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,89,90,91,92,112,116,117,119,125,136,137,138,144,],[32,-31,-32,-47,32,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,32,32,32,32,32,-31,32,32,-32,32,32,32,32,32,32,32,32,32,]),'LESS_THAN_EQUAL':([2,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,89,90,91,92,112,116,117,119,125,136,137,138,144,],[33,-31,-32,-47,33,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,33,33,33,33,33,-31,33,33,-32,33,33,33,33,33,33,33,33,33,]),'GREATER_THAN':([2,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,89,90,91,92,112,116,117,119,125,136,137,138,144,],[34,-31,-32,-47,34,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,34,34,34,34,34,-31,34,34,-32,34,34,34,34,34,34,34,34,34,]),'LESS_THAN':([2,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,89,90,91,92,112,116,117,119,125,136,137,138,144,],[35,-31,-32,-47,35,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,35,35,35,35,35,-31,35,35,-32,35,35,35,35,35,35,35,35,35,]),'NOTEQUAL':([2,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,89,90,91,92,112,116,117,119,125,136,137,138,144,],[36,-31,-32,-47,36,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,36,36,36,36,36,-31,36,36,-32,36,36,36,36,36,36,36,36,36,]),'AND':([2,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,89,90,91,92,112,116,117,119,125,136,137,138,144,],[37,-31,-32,-47,37,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,37,37,37,37,37,-31,37,37,-32,37,37,37,37,37,37,37,37,37,]),'OR':([2,12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,89,90,91,92,112,116,117,119,125,136,137,138,144,],[38,-31,-32,-47,38,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,38,38,38,38,38,-31,38,38,-32,38,38,38,38,38,38,38,38,38,]),'RPAREN':([12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,81,82,88,89,90,91,92,93,94,104,105,106,107,108,113,123,138,],[-31,-32,-47,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,95,96,-46,103,109,-10,-11,-12,-14,-13,-15,-39,-40,-41,-42,115,-45,128,141,]),'SEMICOLON':([12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,76,89,90,91,92,93,94,112,],[-31,-32,-47,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,97,-10,-11,-12,-14,-13,-15,118,]),'RBRACE':([12,13,14,46,57,58,59,60,61,62,63,64,65,66,67,68,69,116,117,119,125,136,137,144,],[-31,-32,-47,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-29,-30,121,122,124,129,139,140,145,]),'LPAREN':([19,20,21,22,24,47,48,49,50,55,130,],[51,52,53,54,56,-39,-41,-40,-42,87,135,]),'EQUAL':([47,48,49,50,98,99,100,101,],[70,71,72,73,70,71,72,73,]),'CHAR':([72,],[93,]),'STRING':([73,],[94,]),'COMMA':([81,104,105,106,107,],[102,-39,-40,-41,-42,]),'LBRACE':([95,96,103,115,127,128,141,],[110,111,114,120,131,134,143,]),'ELSE':([121,145,],[127,127,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ka':([0,2,3,4,5,6,7,8,9,],[1,25,39,40,41,42,43,44,45,]),'expression':([0,2,3,4,5,6,7,8,9,11,26,27,28,29,30,31,32,33,34,35,36,37,38,51,52,56,70,71,97,110,111,114,120,131,134,135,143,],[2,2,2,2,2,2,2,2,2,46,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,88,90,91,112,116,117,119,125,136,137,138,144,]),'assign':([0,2,3,4,5,6,7,8,9,53,118,],[3,3,3,3,3,3,3,3,3,76,123,]),'if_statement':([0,2,3,4,5,6,7,8,9,127,],[4,4,4,4,4,4,4,4,4,133,]),'if_else_statement':([0,2,3,4,5,6,7,8,9,127,],[5,5,5,5,5,5,5,5,5,132,]),'while_statement':([0,2,3,4,5,6,7,8,9,],[6,6,6,6,6,6,6,6,6,]),'for_statement':([0,2,3,4,5,6,7,8,9,],[7,7,7,7,7,7,7,7,7,]),'function_statement':([0,2,3,4,5,6,7,8,9,],[8,8,8,8,8,8,8,8,8,]),'print':([0,2,3,4,5,6,7,8,9,],[9,9,9,9,9,9,9,9,9,]),'empty':([0,2,3,4,5,6,7,8,9,121,139,145,],[10,10,10,10,10,10,10,10,10,126,142,126,]),'type_identifier':([0,2,3,4,5,6,7,8,9,54,87,102,],[22,22,22,22,22,22,22,22,22,81,81,81,]),'function_input':([54,87,102,],[82,108,113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ka","S'",1,None,None,None),
  ('ka -> expression ka','ka',2,'p_ka','ka.py',177),
  ('ka -> assign ka','ka',2,'p_ka','ka.py',178),
  ('ka -> if_statement ka','ka',2,'p_ka','ka.py',179),
  ('ka -> if_else_statement ka','ka',2,'p_ka','ka.py',180),
  ('ka -> while_statement ka','ka',2,'p_ka','ka.py',181),
  ('ka -> for_statement ka','ka',2,'p_ka','ka.py',182),
  ('ka -> function_statement ka','ka',2,'p_ka','ka.py',183),
  ('ka -> print ka','ka',2,'p_ka','ka.py',184),
  ('ka -> empty','ka',1,'p_ka','ka.py',185),
  ('assign -> INTTYPE IDENTIFIER EQUAL INT','assign',4,'p_assign','ka.py',193),
  ('assign -> INTTYPE IDENTIFIER EQUAL expression','assign',4,'p_assign','ka.py',194),
  ('assign -> FLOATTYPE IDENTIFIER EQUAL expression','assign',4,'p_assign','ka.py',195),
  ('assign -> CHARTYPE IDENTIFIER EQUAL CHAR','assign',4,'p_assign','ka.py',196),
  ('assign -> FLOATTYPE IDENTIFIER EQUAL FLOAT','assign',4,'p_assign','ka.py',197),
  ('assign -> STRINGTYPE IDENTIFIER EQUAL STRING','assign',4,'p_assign','ka.py',198),
  ('print -> PRINT LPAREN expression RPAREN','print',4,'p_print','ka.py',205),
  ('expression -> expression ADD expression','expression',3,'p_expression_binary','ka.py',212),
  ('expression -> expression SUBTRACT expression','expression',3,'p_expression_binary','ka.py',213),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binary','ka.py',214),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','ka.py',215),
  ('expression -> expression EXP expression','expression',3,'p_expression_binary','ka.py',216),
  ('expression -> expression EQUALCOMP expression','expression',3,'p_expression_binary_compare','ka.py',234),
  ('expression -> expression GREATER_THAN_EQUAL expression','expression',3,'p_expression_binary_compare','ka.py',235),
  ('expression -> expression LESS_THAN_EQUAL expression','expression',3,'p_expression_binary_compare','ka.py',236),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression_binary_compare','ka.py',237),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_binary_compare','ka.py',238),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binary_compare','ka.py',239),
  ('expression -> NOT expression','expression',2,'p_expression_unary','ka.py',259),
  ('expression -> expression AND expression','expression',3,'p_expression_and_or','ka.py',267),
  ('expression -> expression OR expression','expression',3,'p_expression_and_or','ka.py',268),
  ('expression -> INT','expression',1,'p_int_float','ka.py',279),
  ('expression -> FLOAT','expression',1,'p_int_float','ka.py',280),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE empty','if_statement',8,'p_expression_if','ka.py',287),
  ('if_else_statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE empty','if_else_statement',12,'p_expression_if_else','ka.py',294),
  ('if_else_statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE if_else_statement','if_else_statement',9,'p_expression_if_else','ka.py',295),
  ('if_else_statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE if_statement','if_else_statement',9,'p_expression_if_else','ka.py',296),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE','while_statement',7,'p_while_statement','ka.py',311),
  ('for_statement -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN LBRACE expression RBRACE','for_statement',11,'p_for_statement','ka.py',318),
  ('type_identifier -> INTTYPE IDENTIFIER','type_identifier',2,'p_types','ka.py',325),
  ('type_identifier -> CHARTYPE IDENTIFIER','type_identifier',2,'p_types','ka.py',326),
  ('type_identifier -> FLOATTYPE IDENTIFIER','type_identifier',2,'p_types','ka.py',327),
  ('type_identifier -> STRINGTYPE IDENTIFIER','type_identifier',2,'p_types','ka.py',328),
  ('function_statement -> type_identifier LPAREN function_input RPAREN LBRACE expression RBRACE','function_statement',7,'p_function','ka.py',334),
  ('function_statement -> VOID IDENTIFIER LPAREN function_input RPAREN LBRACE expression RBRACE','function_statement',8,'p_function','ka.py',335),
  ('function_input -> type_identifier COMMA function_input','function_input',3,'p_function_input','ka.py',345),
  ('function_input -> type_identifier','function_input',1,'p_function_input','ka.py',346),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','ka.py',356),
  ('empty -> <empty>','empty',0,'p_empty','ka.py',363),
]
