
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALCOMPNOTEQUALGREATER_THAN_EQUALLESS_THAN_EQUALGREATER_THANLESS_THANleftADDSUBTRACTleftEXPMULTIPLYDIVIDEADD AND BREAK CHAR CHARTYPE COMMA COMMENT CONTINUE DIVIDE ELSE EQUAL EQUALCOMP EXP FLOAT FLOATTYPE FOR GREATER_THAN GREATER_THAN_EQUAL IDENTIFIER IF INPUT INT INTTYPE LBRACE LESS_THAN LESS_THAN_EQUAL LPAREN MULTIPLY NOT NOTEQUAL OR PRINT RBRACE RETURN RPAREN SEMICOLON STRING STRINGTYPE SUBTRACT VOID WHILE\n    ka : expression ka\n       | assign ka\n       | if_statement ka\n       | if_else_statement ka\n       | while_statement ka\n       | for_statement ka\n       | print ka\n       | empty\n    \n    assign : INTTYPE IDENTIFIER EQUAL INT\n           | INTTYPE IDENTIFIER EQUAL expression\n           | FLOATTYPE IDENTIFIER EQUAL expression\n           | CHARTYPE IDENTIFIER EQUAL CHAR\n           | FLOATTYPE IDENTIFIER EQUAL FLOAT\n           | STRINGTYPE IDENTIFIER EQUAL STRING\n    \n  print : PRINT LPAREN expression RPAREN\n  \n    expression : expression ADD expression\n               | expression SUBTRACT expression\n               | expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression EXP expression\n    \n    expression : expression EQUALCOMP expression\n               | expression GREATER_THAN_EQUAL expression\n               | expression LESS_THAN_EQUAL expression\n               | expression GREATER_THAN expression\n               | expression LESS_THAN expression\n               | expression NOTEQUAL expression\n    \n    expression : NOT expression\n    \n    expression : expression AND expression\n               | expression OR expression\n    \n    expression : INT\n               | FLOAT\n    \n    if_statement : IF LPAREN expression RPAREN LBRACE expression RBRACE empty\n    \n    if_else_statement : IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE empty\n                      | IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE if_else_statement\n                      | IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE if_statement\n    \n    while_statement : WHILE LPAREN expression RPAREN LBRACE expression RBRACE\n    \n    for_statement : FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN LBRACE expression RBRACE\n    \n    expression : IDENTIFIER\n    \n    empty :\n    '
    
_lr_action_items = {'NOT':([0,2,3,4,5,6,7,8,10,11,12,13,23,24,25,26,27,28,29,30,31,32,33,34,35,42,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,75,76,77,80,81,82,83,88,89,91,95,96,97,98,99,103,104,106,107,109,],[10,10,10,10,10,10,10,10,10,-30,-31,-38,10,10,10,10,10,10,10,10,10,10,10,10,10,-27,10,10,10,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,10,10,-9,-10,-11,-13,-12,-14,10,-15,10,10,-39,-36,-32,10,-34,-35,10,10,-39,-37,-33,10,-39,]),'INT':([0,2,3,4,5,6,7,8,10,11,12,13,23,24,25,26,27,28,29,30,31,32,33,34,35,42,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,75,76,77,80,81,82,83,88,89,91,95,96,97,98,99,103,104,106,107,109,],[11,11,11,11,11,11,11,11,11,-30,-31,-38,11,11,11,11,11,11,11,11,11,11,11,11,11,-27,11,11,11,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,72,11,-9,-10,-11,-13,-12,-14,11,-15,11,11,-39,-36,-32,11,-34,-35,11,11,-39,-37,-33,11,-39,]),'FLOAT':([0,2,3,4,5,6,7,8,10,11,12,13,23,24,25,26,27,28,29,30,31,32,33,34,35,42,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,75,76,77,80,81,82,83,88,89,91,95,96,97,98,99,103,104,106,107,109,],[12,12,12,12,12,12,12,12,12,-30,-31,-38,12,12,12,12,12,12,12,12,12,12,12,12,12,-27,12,12,12,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,12,75,-9,-10,-11,-13,-12,-14,12,-15,12,12,-39,-36,-32,12,-34,-35,12,12,-39,-37,-33,12,-39,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,23,24,25,26,27,28,29,30,31,32,33,34,35,42,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,73,74,75,76,77,80,81,82,83,88,89,91,95,96,97,98,99,103,104,106,107,109,],[13,13,13,13,13,13,13,13,13,-30,-31,-38,43,44,45,46,13,13,13,13,13,13,13,13,13,13,13,13,13,-27,13,13,13,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,13,13,-9,-10,-11,-13,-12,-14,13,-15,13,13,-39,-36,-32,13,-34,-35,13,13,-39,-37,-33,13,-39,]),'INTTYPE':([0,2,3,4,5,6,7,8,11,12,13,42,49,51,52,53,54,55,56,57,58,59,60,61,62,63,72,73,74,75,76,77,81,87,88,89,91,96,97,103,104,106,109,],[14,14,14,14,14,14,14,14,-30,-31,-38,-27,14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-9,-10,-11,-13,-12,-14,-15,14,-39,-36,-32,-34,-35,-39,-37,-33,-39,]),'FLOATTYPE':([0,2,3,4,5,6,7,8,11,12,13,42,49,51,52,53,54,55,56,57,58,59,60,61,62,63,72,73,74,75,76,77,81,87,88,89,91,96,97,103,104,106,109,],[15,15,15,15,15,15,15,15,-30,-31,-38,-27,15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-9,-10,-11,-13,-12,-14,-15,15,-39,-36,-32,-34,-35,-39,-37,-33,-39,]),'CHARTYPE':([0,2,3,4,5,6,7,8,11,12,13,42,49,51,52,53,54,55,56,57,58,59,60,61,62,63,72,73,74,75,76,77,81,87,88,89,91,96,97,103,104,106,109,],[16,16,16,16,16,16,16,16,-30,-31,-38,-27,16,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-9,-10,-11,-13,-12,-14,-15,16,-39,-36,-32,-34,-35,-39,-37,-33,-39,]),'STRINGTYPE':([0,2,3,4,5,6,7,8,11,12,13,42,49,51,52,53,54,55,56,57,58,59,60,61,62,63,72,73,74,75,76,77,81,87,88,89,91,96,97,103,104,106,109,],[17,17,17,17,17,17,17,17,-30,-31,-38,-27,17,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-9,-10,-11,-13,-12,-14,-15,17,-39,-36,-32,-34,-35,-39,-37,-33,-39,]),'IF':([0,2,3,4,5,6,7,8,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,72,73,74,75,76,77,81,88,89,91,92,96,97,103,104,106,109,],[18,18,18,18,18,18,18,18,-30,-31,-38,-27,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-9,-10,-11,-13,-12,-14,-15,-39,-36,-32,94,-34,-35,-39,-37,-33,-39,]),'WHILE':([0,2,3,4,5,6,7,8,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,72,73,74,75,76,77,81,88,89,91,96,97,103,104,106,109,],[19,19,19,19,19,19,19,19,-30,-31,-38,-27,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-9,-10,-11,-13,-12,-14,-15,-39,-36,-32,-34,-35,-39,-37,-33,-39,]),'FOR':([0,2,3,4,5,6,7,8,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,72,73,74,75,76,77,81,88,89,91,96,97,103,104,106,109,],[20,20,20,20,20,20,20,20,-30,-31,-38,-27,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-9,-10,-11,-13,-12,-14,-15,-39,-36,-32,-34,-35,-39,-37,-33,-39,]),'PRINT':([0,2,3,4,5,6,7,8,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,72,73,74,75,76,77,81,88,89,91,96,97,103,104,106,109,],[21,21,21,21,21,21,21,21,-30,-31,-38,-27,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-9,-10,-11,-13,-12,-14,-15,-39,-36,-32,-34,-35,-39,-37,-33,-39,]),'$end':([0,1,2,3,4,5,6,7,8,9,11,12,13,22,36,37,38,39,40,41,42,51,52,53,54,55,56,57,58,59,60,61,62,63,72,73,74,75,76,77,81,88,89,91,96,97,103,104,106,109,],[-39,0,-39,-39,-39,-39,-39,-39,-39,-8,-30,-31,-38,-1,-2,-3,-4,-5,-6,-7,-27,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-9,-10,-11,-13,-12,-14,-15,-39,-36,-32,-34,-35,-39,-37,-33,-39,]),'ADD':([2,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,84,85,86,100,101,102,108,],[23,-30,-31,-38,23,-16,-17,-18,-19,-20,23,23,23,23,23,23,23,23,23,23,23,-30,23,23,-31,23,23,23,23,23,23,23,]),'SUBTRACT':([2,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,84,85,86,100,101,102,108,],[24,-30,-31,-38,24,-16,-17,-18,-19,-20,24,24,24,24,24,24,24,24,24,24,24,-30,24,24,-31,24,24,24,24,24,24,24,]),'MULTIPLY':([2,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,84,85,86,100,101,102,108,],[25,-30,-31,-38,25,25,25,-18,-19,-20,25,25,25,25,25,25,25,25,25,25,25,-30,25,25,-31,25,25,25,25,25,25,25,]),'DIVIDE':([2,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,84,85,86,100,101,102,108,],[26,-30,-31,-38,26,26,26,-18,-19,-20,26,26,26,26,26,26,26,26,26,26,26,-30,26,26,-31,26,26,26,26,26,26,26,]),'EXP':([2,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,84,85,86,100,101,102,108,],[27,-30,-31,-38,27,27,27,-18,-19,-20,27,27,27,27,27,27,27,27,27,27,27,-30,27,27,-31,27,27,27,27,27,27,27,]),'EQUALCOMP':([2,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,84,85,86,100,101,102,108,],[28,-30,-31,-38,28,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,28,28,28,28,28,-30,28,28,-31,28,28,28,28,28,28,28,]),'GREATER_THAN_EQUAL':([2,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,84,85,86,100,101,102,108,],[29,-30,-31,-38,29,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,29,29,29,29,29,-30,29,29,-31,29,29,29,29,29,29,29,]),'LESS_THAN_EQUAL':([2,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,84,85,86,100,101,102,108,],[30,-30,-31,-38,30,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,30,30,30,30,30,-30,30,30,-31,30,30,30,30,30,30,30,]),'GREATER_THAN':([2,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,84,85,86,100,101,102,108,],[31,-30,-31,-38,31,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,31,31,31,31,31,-30,31,31,-31,31,31,31,31,31,31,31,]),'LESS_THAN':([2,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,84,85,86,100,101,102,108,],[32,-30,-31,-38,32,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,32,32,32,32,32,-30,32,32,-31,32,32,32,32,32,32,32,]),'NOTEQUAL':([2,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,84,85,86,100,101,102,108,],[33,-30,-31,-38,33,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,33,33,33,33,33,-30,33,33,-31,33,33,33,33,33,33,33,]),'AND':([2,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,84,85,86,100,101,102,108,],[34,-30,-31,-38,34,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,34,34,34,34,34,-30,34,34,-31,34,34,34,34,34,34,34,]),'OR':([2,11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,84,85,86,100,101,102,108,],[35,-30,-31,-38,35,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,35,35,35,35,35,-30,35,35,-31,35,35,35,35,35,35,35,]),'RPAREN':([11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,76,77,90,102,],[-30,-31,-38,-27,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,78,79,81,-9,-10,-11,-13,-12,-14,93,105,]),'SEMICOLON':([11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,70,72,73,74,75,76,77,84,],[-30,-31,-38,-27,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,80,-9,-10,-11,-13,-12,-14,87,]),'RBRACE':([11,12,13,42,51,52,53,54,55,56,57,58,59,60,61,62,63,85,86,100,101,108,],[-30,-31,-38,-27,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,88,89,103,104,109,]),'LPAREN':([18,19,20,21,94,],[47,48,49,50,99,]),'EQUAL':([43,44,45,46,],[64,65,66,67,]),'CHAR':([66,],[76,]),'STRING':([67,],[77,]),'LBRACE':([78,79,92,93,105,],[82,83,95,98,107,]),'ELSE':([88,109,],[92,92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ka':([0,2,3,4,5,6,7,8,],[1,22,36,37,38,39,40,41,]),'expression':([0,2,3,4,5,6,7,8,10,23,24,25,26,27,28,29,30,31,32,33,34,35,47,48,50,64,65,80,82,83,95,98,99,107,],[2,2,2,2,2,2,2,2,42,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,73,74,84,85,86,100,101,102,108,]),'assign':([0,2,3,4,5,6,7,8,49,87,],[3,3,3,3,3,3,3,3,70,90,]),'if_statement':([0,2,3,4,5,6,7,8,92,],[4,4,4,4,4,4,4,4,97,]),'if_else_statement':([0,2,3,4,5,6,7,8,92,],[5,5,5,5,5,5,5,5,96,]),'while_statement':([0,2,3,4,5,6,7,8,],[6,6,6,6,6,6,6,6,]),'for_statement':([0,2,3,4,5,6,7,8,],[7,7,7,7,7,7,7,7,]),'print':([0,2,3,4,5,6,7,8,],[8,8,8,8,8,8,8,8,]),'empty':([0,2,3,4,5,6,7,8,88,103,109,],[9,9,9,9,9,9,9,9,91,106,91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ka","S'",1,None,None,None),
  ('ka -> expression ka','ka',2,'p_ka','ka.py',175),
  ('ka -> assign ka','ka',2,'p_ka','ka.py',176),
  ('ka -> if_statement ka','ka',2,'p_ka','ka.py',177),
  ('ka -> if_else_statement ka','ka',2,'p_ka','ka.py',178),
  ('ka -> while_statement ka','ka',2,'p_ka','ka.py',179),
  ('ka -> for_statement ka','ka',2,'p_ka','ka.py',180),
  ('ka -> print ka','ka',2,'p_ka','ka.py',181),
  ('ka -> empty','ka',1,'p_ka','ka.py',182),
  ('assign -> INTTYPE IDENTIFIER EQUAL INT','assign',4,'p_assign','ka.py',190),
  ('assign -> INTTYPE IDENTIFIER EQUAL expression','assign',4,'p_assign','ka.py',191),
  ('assign -> FLOATTYPE IDENTIFIER EQUAL expression','assign',4,'p_assign','ka.py',192),
  ('assign -> CHARTYPE IDENTIFIER EQUAL CHAR','assign',4,'p_assign','ka.py',193),
  ('assign -> FLOATTYPE IDENTIFIER EQUAL FLOAT','assign',4,'p_assign','ka.py',194),
  ('assign -> STRINGTYPE IDENTIFIER EQUAL STRING','assign',4,'p_assign','ka.py',195),
  ('print -> PRINT LPAREN expression RPAREN','print',4,'p_print','ka.py',202),
  ('expression -> expression ADD expression','expression',3,'p_expression_binary','ka.py',209),
  ('expression -> expression SUBTRACT expression','expression',3,'p_expression_binary','ka.py',210),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binary','ka.py',211),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','ka.py',212),
  ('expression -> expression EXP expression','expression',3,'p_expression_binary','ka.py',213),
  ('expression -> expression EQUALCOMP expression','expression',3,'p_expression_binary_compare','ka.py',231),
  ('expression -> expression GREATER_THAN_EQUAL expression','expression',3,'p_expression_binary_compare','ka.py',232),
  ('expression -> expression LESS_THAN_EQUAL expression','expression',3,'p_expression_binary_compare','ka.py',233),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression_binary_compare','ka.py',234),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_binary_compare','ka.py',235),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binary_compare','ka.py',236),
  ('expression -> NOT expression','expression',2,'p_expression_unary','ka.py',256),
  ('expression -> expression AND expression','expression',3,'p_expression_and_or','ka.py',264),
  ('expression -> expression OR expression','expression',3,'p_expression_and_or','ka.py',265),
  ('expression -> INT','expression',1,'p_int_float','ka.py',276),
  ('expression -> FLOAT','expression',1,'p_int_float','ka.py',277),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE empty','if_statement',8,'p_expression_if','ka.py',284),
  ('if_else_statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE empty','if_else_statement',12,'p_expression_if_else','ka.py',291),
  ('if_else_statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE if_else_statement','if_else_statement',9,'p_expression_if_else','ka.py',292),
  ('if_else_statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE if_statement','if_else_statement',9,'p_expression_if_else','ka.py',293),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE expression RBRACE','while_statement',7,'p_while_statement','ka.py',308),
  ('for_statement -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN LBRACE expression RBRACE','for_statement',11,'p_for_statement','ka.py',315),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','ka.py',322),
  ('empty -> <empty>','empty',0,'p_empty','ka.py',329),
]
