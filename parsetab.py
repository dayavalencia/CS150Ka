
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALCOMPNOTEQUALGREATER_THAN_EQUALLESS_THAN_EQUALGREATER_THANLESS_THANleftADDSUBTRACTleftEXPMULTIPLYDIVIDEADD AND BREAK CHAR CHARTYPE COMMA COMMENT CONTINUE DIVIDE ELSE EQUAL EQUALCOMP EXP FLOAT FLOATTYPE FOR GREATER_THAN GREATER_THAN_EQUAL IDENTIFIER IF INPUT INT INTTYPE LBRACE LESS_THAN LESS_THAN_EQUAL LPAREN MULTIPLY NOT NOTEQUAL OR PRINT RBRACE RETURN RPAREN SEMICOLON STRING STRINGTYPE SUBTRACT VOID WHILE\n    ka : expression\n       | assign\n       | if_statement\n       | if_else_statement\n       | empty\n    \n    assign : IDENTIFIER EQUAL expression\n    \n    expression : expression ADD expression\n               | expression SUBTRACT expression\n               | expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression EXP expression\n    \n    expression : expression EQUALCOMP expression\n               | expression GREATER_THAN_EQUAL expression\n               | expression LESS_THAN_EQUAL expression\n               | expression GREATER_THAN expression\n               | expression LESS_THAN expression\n               | expression NOTEQUAL expression\n    \n    expression : NOT expression\n    \n    expression : expression AND expression\n               | expression OR expression\n    \n    expression : INT\n               | FLOAT\n    \n    if_statement : IF LPAREN expression RPAREN LBRACE expression RBRACE empty\n    \n    if_else_statement : IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE empty\n                      | IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE if_else_statement\n                      | IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE if_statement\n    \n    expression : IDENTIFIER\n    \n    empty :\n    '
    
_lr_action_items = {'NOT':([0,7,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,45,51,54,60,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'INT':([0,7,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,45,51,54,60,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FLOAT':([0,7,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,45,51,54,60,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'IDENTIFIER':([0,7,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,45,51,54,60,],[10,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'IF':([0,49,],[11,50,]),'$end':([0,1,2,3,4,5,6,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,52,53,57,59,62,],[-28,0,-1,-2,-3,-4,-5,-21,-22,-27,-18,-27,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,-6,-28,-23,-25,-26,-28,-24,-28,]),'ADD':([2,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,],[12,-21,-22,-27,12,-27,-7,-8,-9,-10,-11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'SUBTRACT':([2,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,],[13,-21,-22,-27,13,-27,-7,-8,-9,-10,-11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'MULTIPLY':([2,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,],[14,-21,-22,-27,14,-27,14,14,-9,-10,-11,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'DIVIDE':([2,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,],[15,-21,-22,-27,15,-27,15,15,-9,-10,-11,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'EXP':([2,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,],[16,-21,-22,-27,16,-27,16,16,-9,-10,-11,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'EQUALCOMP':([2,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,],[17,-21,-22,-27,17,-27,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,17,17,17,17,17,17,17,17,]),'GREATER_THAN_EQUAL':([2,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,],[18,-21,-22,-27,18,-27,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,18,18,18,18,18,18,18,18,]),'LESS_THAN_EQUAL':([2,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,],[19,-21,-22,-27,19,-27,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,19,19,19,19,19,19,19,19,]),'GREATER_THAN':([2,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,],[20,-21,-22,-27,20,-27,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,20,20,20,20,20,20,20,20,]),'LESS_THAN':([2,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,],[21,-21,-22,-27,21,-27,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,21,21,21,21,21,21,21,21,]),'NOTEQUAL':([2,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,],[22,-21,-22,-27,22,-27,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,22,22,22,22,22,22,22,22,]),'AND':([2,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,],[23,-21,-22,-27,23,-27,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,23,23,23,23,23,23,23,23,]),'OR':([2,8,9,10,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,],[24,-21,-22,-27,24,-27,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,24,24,24,24,24,24,24,24,]),'RPAREN':([8,9,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,43,56,],[-21,-22,-18,-27,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,44,58,]),'RBRACE':([8,9,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,46,55,61,],[-21,-22,-18,-27,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-19,-20,47,57,62,]),'EQUAL':([10,],[27,]),'LPAREN':([11,50,],[28,54,]),'LBRACE':([44,49,58,],[45,51,60,]),'ELSE':([47,62,],[49,49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ka':([0,],[1,]),'expression':([0,7,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,45,51,54,60,],[2,25,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,55,56,61,]),'assign':([0,],[3,]),'if_statement':([0,49,],[4,53,]),'if_else_statement':([0,49,],[5,52,]),'empty':([0,47,57,62,],[6,48,59,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ka","S'",1,None,None,None),
  ('ka -> expression','ka',1,'p_ka','ka.py',155),
  ('ka -> assign','ka',1,'p_ka','ka.py',156),
  ('ka -> if_statement','ka',1,'p_ka','ka.py',157),
  ('ka -> if_else_statement','ka',1,'p_ka','ka.py',158),
  ('ka -> empty','ka',1,'p_ka','ka.py',159),
  ('assign -> IDENTIFIER EQUAL expression','assign',3,'p_assign','ka.py',166),
  ('expression -> expression ADD expression','expression',3,'p_expression_binary','ka.py',173),
  ('expression -> expression SUBTRACT expression','expression',3,'p_expression_binary','ka.py',174),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binary','ka.py',175),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','ka.py',176),
  ('expression -> expression EXP expression','expression',3,'p_expression_binary','ka.py',177),
  ('expression -> expression EQUALCOMP expression','expression',3,'p_expression_binary_compare','ka.py',195),
  ('expression -> expression GREATER_THAN_EQUAL expression','expression',3,'p_expression_binary_compare','ka.py',196),
  ('expression -> expression LESS_THAN_EQUAL expression','expression',3,'p_expression_binary_compare','ka.py',197),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression_binary_compare','ka.py',198),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_binary_compare','ka.py',199),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binary_compare','ka.py',200),
  ('expression -> NOT expression','expression',2,'p_expression_unary','ka.py',220),
  ('expression -> expression AND expression','expression',3,'p_expression_and_or','ka.py',228),
  ('expression -> expression OR expression','expression',3,'p_expression_and_or','ka.py',229),
  ('expression -> INT','expression',1,'p_int_float','ka.py',240),
  ('expression -> FLOAT','expression',1,'p_int_float','ka.py',241),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE empty','if_statement',8,'p_expression_if','ka.py',248),
  ('if_else_statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE empty','if_else_statement',12,'p_expression_if_else','ka.py',257),
  ('if_else_statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE if_else_statement','if_else_statement',9,'p_expression_if_else','ka.py',258),
  ('if_else_statement -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE if_statement','if_else_statement',9,'p_expression_if_else','ka.py',259),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','ka.py',271),
  ('empty -> <empty>','empty',0,'p_empty','ka.py',278),
]
