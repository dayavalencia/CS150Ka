
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALCOMPNOTEQUALGREATER_THAN_EQUALLESS_THAN_EQUALGREATER_THANLESS_THANleftADDSUBTRACTleftEXPMULTIPLYDIVIDEADD AND BREAK CHAR CHARTYPE COMMA COMMENT CONTINUE DIVIDE ELSE EQUAL EQUALCOMP EXP FLOAT FLOATTYPE FOR GREATER_THAN GREATER_THAN_EQUAL IDENTIFIER IF INPUT INT INTTYPE LBRACE LESS_THAN LESS_THAN_EQUAL LPAREN MULTIPLY NOT NOTEQUAL OR PRINT RBRACE RETURN RPAREN SEMICOLON STRING STRINGTYPE SUBTRACT VOID WHILE\n    ka : expression\n       | assign\n       | empty\n    \n    assign : IDENTIFIER EQUAL expression\n    \n    expression : expression ADD expression\n               | expression SUBTRACT expression\n               | expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression EXP expression\n    \n    expression : expression EQUALCOMP expression\n               | expression GREATER_THAN_EQUAL expression\n               | expression LESS_THAN_EQUAL expression\n               | expression GREATER_THAN expression\n               | expression LESS_THAN expression\n               | expression NOTEQUAL expression\n    \n    expression : NOT expression\n    \n    expression : expression AND expression\n               | expression OR expression\n    \n    expression : INT\n               | FLOAT\n    \n    expression : IF LPAREN expression RPAREN LBRACE expression RBRACE\n    \n    expression : IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE\n    \n    expression : IDENTIFIER\n    \n    empty :\n    '
    
_lr_action_items = {'NOT':([0,5,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,43,47,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'INT':([0,5,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,43,47,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'FLOAT':([0,5,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,43,47,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'IF':([0,5,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,43,47,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'IDENTIFIER':([0,5,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,43,47,],[9,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'$end':([0,1,2,3,4,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,41,45,49,],[-24,0,-1,-2,-3,-19,-20,-23,-16,-23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-4,-21,-22,]),'ADD':([2,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,],[10,-19,-20,-23,10,-23,-5,-6,-7,-8,-9,10,10,10,10,10,10,10,10,10,10,10,-21,10,-22,]),'SUBTRACT':([2,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,],[11,-19,-20,-23,11,-23,-5,-6,-7,-8,-9,11,11,11,11,11,11,11,11,11,11,11,-21,11,-22,]),'MULTIPLY':([2,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,],[12,-19,-20,-23,12,-23,12,12,-7,-8,-9,12,12,12,12,12,12,12,12,12,12,12,-21,12,-22,]),'DIVIDE':([2,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,],[13,-19,-20,-23,13,-23,13,13,-7,-8,-9,13,13,13,13,13,13,13,13,13,13,13,-21,13,-22,]),'EXP':([2,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,],[14,-19,-20,-23,14,-23,14,14,-7,-8,-9,14,14,14,14,14,14,14,14,14,14,14,-21,14,-22,]),'EQUALCOMP':([2,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,],[15,-19,-20,-23,15,-23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,15,15,15,15,15,-21,15,-22,]),'GREATER_THAN_EQUAL':([2,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,],[16,-19,-20,-23,16,-23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,16,16,16,16,16,-21,16,-22,]),'LESS_THAN_EQUAL':([2,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,],[17,-19,-20,-23,17,-23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,17,17,17,17,17,-21,17,-22,]),'GREATER_THAN':([2,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,],[18,-19,-20,-23,18,-23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,18,18,18,18,18,-21,18,-22,]),'LESS_THAN':([2,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,],[19,-19,-20,-23,19,-23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,19,19,19,19,19,-21,19,-22,]),'NOTEQUAL':([2,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,],[20,-19,-20,-23,20,-23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,20,20,20,20,20,-21,20,-22,]),'AND':([2,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,],[21,-19,-20,-23,21,-23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,21,21,21,21,21,-21,21,-22,]),'OR':([2,6,7,9,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,48,49,],[22,-19,-20,-23,22,-23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,22,22,22,22,22,-21,22,-22,]),'RPAREN':([6,7,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,45,49,],[-19,-20,-16,-23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,42,-21,-22,]),'RBRACE':([6,7,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,48,49,],[-19,-20,-16,-23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,45,-21,49,-22,]),'LPAREN':([8,],[25,]),'EQUAL':([9,],[26,]),'LBRACE':([42,46,],[43,47,]),'ELSE':([45,],[46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ka':([0,],[1,]),'expression':([0,5,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,43,47,],[2,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,48,]),'assign':([0,],[3,]),'empty':([0,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ka","S'",1,None,None,None),
  ('ka -> expression','ka',1,'p_ka','ka.py',155),
  ('ka -> assign','ka',1,'p_ka','ka.py',156),
  ('ka -> empty','ka',1,'p_ka','ka.py',157),
  ('assign -> IDENTIFIER EQUAL expression','assign',3,'p_assign','ka.py',164),
  ('expression -> expression ADD expression','expression',3,'p_expression_binary','ka.py',171),
  ('expression -> expression SUBTRACT expression','expression',3,'p_expression_binary','ka.py',172),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binary','ka.py',173),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','ka.py',174),
  ('expression -> expression EXP expression','expression',3,'p_expression_binary','ka.py',175),
  ('expression -> expression EQUALCOMP expression','expression',3,'p_expression_binary_compare','ka.py',193),
  ('expression -> expression GREATER_THAN_EQUAL expression','expression',3,'p_expression_binary_compare','ka.py',194),
  ('expression -> expression LESS_THAN_EQUAL expression','expression',3,'p_expression_binary_compare','ka.py',195),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression_binary_compare','ka.py',196),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_binary_compare','ka.py',197),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binary_compare','ka.py',198),
  ('expression -> NOT expression','expression',2,'p_expression_unary','ka.py',218),
  ('expression -> expression AND expression','expression',3,'p_expression_and_or','ka.py',226),
  ('expression -> expression OR expression','expression',3,'p_expression_and_or','ka.py',227),
  ('expression -> INT','expression',1,'p_int_float','ka.py',238),
  ('expression -> FLOAT','expression',1,'p_int_float','ka.py',239),
  ('expression -> IF LPAREN expression RPAREN LBRACE expression RBRACE','expression',7,'p_expression_if','ka.py',246),
  ('expression -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE','expression',11,'p_expression_if_else','ka.py',255),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','ka.py',267),
  ('empty -> <empty>','empty',0,'p_empty','ka.py',274),
]
